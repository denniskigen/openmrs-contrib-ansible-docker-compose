worker_processes  1;
user              nobody;

events {
  worker_connections  1024;
  multi_accept        off;
}

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  tcp_nopush    on;
  tcp_nodelay   on;

  keepalive_timeout  65;

  gzip  on;

  # allow CORS requests from selected hosts
  map $http_origin $cors_origin_header {
    default "";
    "https://openmrs-spa.org" "$http_origin";
  }

  map $http_origin $cors_cred {
    default "false";
    "https://openmrs-spa.org" "true";
  }
  
  map $request_uri $csp_header {
    default "default-src 'self' 'unsafe-inline' https://spa-modules.nyc3.digitaloceanspaces.com/; base-uri 'self'; font-src 'self' https://fonts.gstatic.com/;";
    "~^/openmrs/(?:admin|dictionary|module)/" "default-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; font-src 'self';";
    "~^/openmrs/owa" "default-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; font-src 'self' data:; img-src 'self' data:;";
  }

  # this is the overall server
  server {
    listen       80;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy $csp_header;

    proxy_cookie_flags  JSESSIONID secure samesite=strict;

    absolute_redirect off;

    # anything in /openmrs/spa is actually served from the DO cloud
    location /openmrs/spa {
      # importmap should not be cached
      location ~* /openmrs/spa/(.*\.importmap\.json)$ {
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        expires 0;
        proxy_pass https://spa-modules.nyc3.digitaloceanspaces.com/@openmrs/esm-app-shell/latest/dist/$1;
      }

      # any file requested (beside importmap) is served from esm-app-shell with caching headers
      location ~* /openmrs/spa/(.*\.(?!html?)[^.]+)$ {
        expires 30d;
        proxy_pass https://spa-modules.nyc3.digitaloceanspaces.com/@openmrs/esm-app-shell/latest/dist/$1;
      }

      # anything that does not have an extension is routed to the single page
      location /openmrs/spa/ {
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        expires 0;
        rewrite ^(.*)$ /@openmrs/esm-app-shell/latest/dist/index.html break;
        proxy_pass https://spa-modules.nyc3.digitaloceanspaces.com;
      }
    }

    # anything to /openmrs but not /openmrs/spa is served from the backend
    location /openmrs {
      # here we allow CORS for the selected hosts but *only* to the REST API
      location /openmrs/ws/rest/v1 {
        add_header "Access-Control-Allow-Origin" $cors_origin_header always;
        add_header "Access-Control-Allow-Credentials" $cors_cred;
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        add_header "Access-Control-Expose-Headers" "Authorization" always;

        if ($request_method = 'OPTIONS') {
          add_header "Access-Control-Allow-Origin" $cors_origin_header always;
          add_header "Access-Control-Allow-Credentials" $cors_cred;
          add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS";
          add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
          add_header "Access-Control-Expose-Headers" "Authorization" always;
          # Tell client that this pre-flight info is valid for 20 days
          add_header 'Access-Control-Max-Age' 1728000;
          add_header 'Content-Type' 'text/plain;charset=UTF-8';
          add_header 'Content-Length' 0;
          return 204;
        }

        proxy_pass http://openmrs:8080/openmrs/ws/rest/v1;
      }

      proxy_pass http://openmrs:8080;
    }

    # in case you end-up at /, we send you to the frontend
    location = / {
      return 301 openmrs/spa;
    }
  }
}
